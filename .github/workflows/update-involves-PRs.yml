name: Update Existing Items in Project (Debugging)

on:
  workflow_dispatch: # Manual trigger only

jobs:
  update-existing-items:
    runs-on: ubuntu-latest

    steps:
    - name: Debug Items in Project
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.PROJECT_TOKEN }}
        script: |
          const projectId = "PVT_kwHOCAOYJ84AtQGI"; // Replace with your project ID

          // GraphQL query to fetch project items with enhanced typename
          const getProjectItemsQuery = `
            query GetProjectItems($projectId: ID!, $after: String) {
              node(id: $projectId) {
                ... on ProjectV2 {
                  items(first: 100, after: $after) {
                    nodes {
                      id
                      content {
                        __typename
                        ... on PullRequest {
                          number
                          title
                          author {
                            login
                          }
                        }
                        ... on Issue {
                          number
                          title
                          author {
                            login
                          }
                        }
                      }
                    }
                    pageInfo {
                      hasNextPage
                      endCursor
                    }
                  }
                }
              }
            }
          `;

          let hasNextPage = true;
          let cursor = null;

          // Loop through paginated results
          while (hasNextPage) {
            console.log(`Fetching project items with cursor: ${cursor || 'null'}`);
            const projectItems = await github.graphql(getProjectItemsQuery, { projectId, after: cursor });
            const items = projectItems.node.items.nodes;

            if (items.length === 0) {
              console.log("No items found in the project.");
              return;
            }

            console.log(`Processing ${items.length} item(s)...`);

            for (const item of items) {
              if (item.content) {
                console.log(`Item ID ${item.id}: __typename: ${item.content.__typename}`);
                if (item.content.__typename === "PullRequest") {
                  console.log(`Item ID ${item.id} is a Pull Request: ${item.content.title}`);
                } else if (item.content.__typename === "Issue") {
                  console.log(`Item ID ${item.id} is an Issue: ${item.content.title}`);
                } else {
                  console.log(`Item ID ${item.id} has an unexpected type: ${item.content.__typename}`);
                }
              } else {
                console.log(`Item ID ${item.id} has no content.`);
              }
            }

            // Check for next page and set the cursor
            hasNextPage = projectItems.node.items.pageInfo.hasNextPage;
            cursor = projectItems.node.items.pageInfo.endCursor;
          }

          console.log("Finished processing all project items.");
