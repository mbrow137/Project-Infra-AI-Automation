name: Auto Add Issues and PRs to Azure Project 

on:
  schedule:
    - cron: '0 0 * * *' # Runs daily at midnight UTC
  push:
    branches:
      - main
  workflow_dispatch: # Allow manual runs

jobs:
  add-items-to-project:
    runs-on: ubuntu-latest

    steps:
    - name: Search Issues and PRs Matching Query
      id: search-items
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.AZURE_PROJECT_TOKEN }}
        script: |
          const query = `
            is:open
            updated:>2024-09-01
            involves:jackfrancis involves:dtzar involves:willie-yao
            involves:mboersma involves:jont828 involves:nawazkh
            involves:nojnhuh involves:mbrow137
            repo:kubernetes-sigs/cluster-api-provider-azure
            repo:kubernetes-sigs/cluster-api
            repo:kubernetes-sigs/image-builder
            repo:kubernetes/autoscaler
            repo:kubernetes/enhancements
            repo:kubernetes/kubernetes
            repo:kubernetes-sigs/cloud-provider-azure
            repo:kubernetes/perf-tests
            repo:kubernetes/test-infra
            repo:kubernetes/cluster-api-addon-provider-helm
            repo:kubernetes/azure-service-operator
            repo:Azure/karpenter-poc
            repo:kubernetes/autoscaler
            repo:Azure/dalec-build-defs
            repo:kubernetes-sigs/mcs-api
          `.replace(/\s+/g, ' ').trim(); // Compact query string

          // Step 1: Search Items (Issues and PRs)
          const results = await github.rest.search.issuesAndPullRequests({ q: query, per_page: 100 });
          const items = results.data.items;
          if (items.length === 0) {
            console.log("No issues or PRs found matching the query.");
            return;
          }
          console.log(`Found ${items.length} item(s) to process.`);

          const projectId = "PVT_kwDOAGhwUs4Aq7De";
          const fieldIdInvolves = "PVTF_lADOAGhwUs4Aq7DezgkWelY";
          const queryProjectAdd = `
            mutation AddProjectV2ItemById($projectId: ID!, $contentId: ID!) {
              addProjectV2ItemById(input: {projectId: $projectId, contentId: $contentId}) {
                item {
                  id
                }
              }
            }
          `;
          const queryProjectUpdateField = `
            mutation UpdateProjectV2ItemFieldValue($projectId: ID!, $itemId: ID!, $fieldId: ID!, $value: ProjectV2FieldValue!) {
              updateProjectV2ItemFieldValue(input: {
                projectId: $p
